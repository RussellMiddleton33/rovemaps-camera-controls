import{_ as o,c as a,o as r,ae as t}from"./chunks/framework.CBTkueSR.js";const p=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Handlers.md","filePath":"Handlers.md"}'),i={name:"Handlers.md"};function l(n,e,d,c,s,h){return r(),a("div",null,[...e[0]||(e[0]=[t('<h2 id="handlers" tabindex="-1">Handlers <a class="header-anchor" href="#handlers" aria-label="Permalink to &quot;Handlers&quot;">​</a></h2><h3 id="scroll-zoom" tabindex="-1">Scroll Zoom <a class="header-anchor" href="#scroll-zoom" aria-label="Permalink to &quot;Scroll Zoom&quot;">​</a></h3><ul><li>Trackpad vs wheel detection with <code>onWheelModeChange(mode)</code></li><li><code>around: &#39;center&#39;|&#39;pointer&#39;</code> keeps target under cursor during zoom</li><li>Inertia smoothing with reduced tiny deltas on high-DPR devices</li></ul><h3 id="mouse-pan-rotate-pitch" tabindex="-1">Mouse Pan / Rotate / Pitch <a class="header-anchor" href="#mouse-pan-rotate-pitch" aria-label="Permalink to &quot;Mouse Pan / Rotate / Pitch&quot;">​</a></h3><ul><li>Pan: left drag with rubberband resistance near pan bounds and inertia</li><li>Rotate: right drag; <code>around: &#39;pointer&#39;</code> preserves world point under cursor</li><li>Pitch: Shift + drag; <code>around: &#39;pointer&#39;</code> preserves world point</li></ul><h3 id="touch-two-finger" tabindex="-1">Touch (Two-finger) <a class="header-anchor" href="#touch-two-finger" aria-label="Permalink to &quot;Touch (Two-finger)&quot;">​</a></h3><ul><li>Pinch (zoom) + rotate: locks mode and preserves centroid when <code>around: &#39;pinch&#39;</code></li><li>Two-finger pitch: vertical movement maps to pitch; centroid preserved</li><li>Rubberband resistance during pan mode and during inertia</li></ul><h3 id="keyboard" tabindex="-1">Keyboard <a class="header-anchor" href="#keyboard" aria-label="Permalink to &quot;Keyboard&quot;">​</a></h3><ul><li>Arrow pan, +/- zoom, Q/E rotate, PageUp/Down pitch</li></ul><h3 id="dblclick-double-tap-box-zoom" tabindex="-1">Dblclick / Double-tap, Box Zoom <a class="header-anchor" href="#dblclick-double-tap-box-zoom" aria-label="Permalink to &quot;Dblclick / Double-tap, Box Zoom&quot;">​</a></h3><ul><li>Dblclick/tap zoom around pointer; Shift invert</li><li>Box zoom with Shift + drag; fit bounds via projection-based solver</li></ul>',11)])])}const m=o(i,[["render",l]]);export{p as __pageData,m as default};
